{"version":3,"sources":["Navbar.js","WorldWideCovid.js","CountryCovid.js","Tab.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","class","commaSeparateNumber","val","test","toString","replace","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","WorldWideCovidBoard","useState","json","setJson","pieChart","setPieChart","lineChart","setLineChart","LineChart","selectDay","arrCases","arrCalCases","arrDeaths","arrCalDeaths","arrLabel","axios","get","then","res","Object","keys","data","cases","values","deaths","map","item","i","labels","datasets","label","borderColor","backgroundColor","fill","cubicInterpolationMode","tension","catch","err","console","log","useEffect","response","population","calCases","toFixed","PieChart","getTime","src","todayCases","todayDeaths","todayRecovered","recovered","options","rotation","responsive","plugins","legend","position","title","display","text","interaction","intersect","scales","x","y","onChange","e","target","value","CountryCovid","arrJson","objCountry","country","setCountry","code","id","selectCountry","setSelectCountry","chart","setChart","setDay","countryInfo","iso2","timeline","Chart","Autocomplete","autoSelect","v","defaultValue","getOptionLabel","option","renderInput","params","TextField","variant","Tab","toggleTab","setToggleTab","toggleTabs","n","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90b161a1.chunk.js","sourcesContent":["import './Navbar.css'\r\n\r\nfunction Navbar(){\r\n    return(\r\n        <div className=\"Navbar\">\r\n            <div className=\"nav\">\r\n                <h2>Covid-19 Interface</h2>\r\n                <h2>About</h2>\r\n                <i class=\"fab fa-github\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import './WorldWideCovid.css'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\nimport { Pie, Line } from 'react-chartjs-2'\r\n\r\nfunction commaSeparateNumber(val) {\r\n    while (/(\\d+)(\\d{3})/.test(val.toString())) {\r\n        val = val.toString().replace(/(\\d+)(\\d{3})/, '$1' + ',' + '$2');\r\n    }\r\n    return val;\r\n}\r\n\r\nfunction formatDate(date) {\r\n    const arrMonth = ['มกราคม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน', 'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม']\r\n    var d = new Date(date),\r\n        month = '' + (arrMonth[d.getMonth()]),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear() + 543;\r\n\r\n    if (month.length < 2)\r\n        month = '0' + month;\r\n    if (day.length < 2)\r\n        day = '0' + day;\r\n\r\n    return \"วันที่ \" + day + ' ' + month + ' พ.ศ.' + year;\r\n}\r\n\r\nfunction WorldWideCovidBoard() {\r\n    const [json, setJson] = useState(null)\r\n    const [pieChart, setPieChart] = useState({})\r\n    const [lineChart, setLineChart] = useState({})\r\n\r\n    const LineChart = (selectDay) => {\r\n        let arrCases = []\r\n        let arrCalCases = []\r\n        let arrDeaths = []\r\n        let arrCalDeaths = []\r\n        let arrLabel = []\r\n\r\n        axios.get(\"https://disease.sh/v3/covid-19/historical/all?lastdays=\" + selectDay)\r\n            .then(res => {\r\n                arrLabel = Object.keys(res.data.cases);\r\n                arrCases = Object.values(res.data.cases);\r\n                arrDeaths = Object.values(res.data.deaths);\r\n                //cal cases\r\n                arrCalCases = arrCases.map((item, i) => {\r\n                    if (i === (arrCases.length - 1)) {\r\n                        return item - arrCases[i - 1]\r\n                    }\r\n                    return arrCases[i + 1] - item\r\n                })\r\n\r\n                //cal deaths\r\n                arrCalDeaths = arrDeaths.map((item, i) => {\r\n                    if (i === (arrDeaths.length - 1)) {\r\n                        return item - arrDeaths[i - 1]\r\n                    }\r\n                    return arrDeaths[i + 1] - item\r\n                })\r\n\r\n                setLineChart({\r\n                    labels: arrLabel,\r\n                    datasets: [\r\n                        {\r\n                            label: 'ติดเชื้อ',\r\n                            data: arrCalCases,\r\n                            borderColor: '#FF0000',\r\n                            backgroundColor: '#FF0000',\r\n                            fill: false,\r\n                            cubicInterpolationMode: 'monotone',\r\n                            tension: 0.4\r\n                        },\r\n                        {\r\n                            label: 'เสียชีวิต',\r\n                            data: arrCalDeaths,\r\n                            borderColor: '#000000',\r\n                            backgroundColor: '#000000',\r\n                            fill: false,\r\n                            cubicInterpolationMode: 'monotone',\r\n                            tension: 0.4\r\n                        }\r\n                    ]\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const PieChart = (population, cases) => {\r\n        const calCases = ((cases / population) * 100).toFixed(2)\r\n        const calPopulation = 100 - calCases\r\n        setPieChart({\r\n            labels: ['ประชากรทั่วโลก ' + calPopulation + '%', 'คนติดเชื้อสะสม ' + calCases + '%'],\r\n            datasets: [\r\n                {\r\n                    label: 'ผู้ติดเชื้อ',\r\n                    data: [population, cases],\r\n                    backgroundColor: ['#1e60c9', '#9e1111']\r\n                }\r\n            ]\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://disease.sh/v3/covid-19/all\").then((response) => {\r\n            setJson(response.data)\r\n            const population = response.data.population\r\n            const cases = response.data.cases\r\n            PieChart(population, cases)\r\n        })\r\n        LineChart(\"7\")\r\n    }, [])\r\n\r\n    if (!json) {\r\n        return null\r\n    }\r\n\r\n    const date = new Date()\r\n\r\n    return (\r\n        <div className=\"WorldWideCovid\">\r\n            <div className=\"WorldWideCovidBoard\">\r\n                <div className=\"label\">\r\n                    <h2>Worldwide Covid-19</h2>\r\n                    <h2>{formatDate(date.getTime())}</h2>\r\n                </div>\r\n                <div className=\"main-group\">\r\n                    <div className=\"group n1\">\r\n                        <span>\r\n                            <img src=\"./img/icon/virus.png\" className=\"icon\" />\r\n                            <div className=\"text\">\r\n                                <h4>ติดเชื้อเพิ่มขึ้นวันนี้</h4>\r\n                                <h2>{commaSeparateNumber(json.todayCases)}</h2>\r\n                            </div>\r\n                        </span>\r\n                        <div className=\"span-inline\">\r\n                            <span>\r\n                                <img src=\"./img/icon/skull.png\" className=\"icon\" />\r\n                                <div className=\"text\">\r\n                                    <h4>เสียชีวิตวันนี้</h4>\r\n                                    <h2>{commaSeparateNumber(json.todayDeaths)}</h2>\r\n                                </div>\r\n                            </span>\r\n                            <span>\r\n                                <img src=\"./img/icon/patient.png\" className=\"icon\" />\r\n                                <div className=\"text\">\r\n                                    <h4>เข้ารักษาใหม่</h4>\r\n                                    <h2>{commaSeparateNumber(json.todayRecovered)}</h2>\r\n                                </div>\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"group n2\">\r\n                        <span className=\"popution\">\r\n                            <div className=\"label\">\r\n                                <img src=\"./img/icon/people.png\" className=\"icon\" />\r\n                                <h4>ประชากรทั่วโลก</h4>\r\n                            </div>\r\n                            <h2>{commaSeparateNumber(json.population)}</h2>\r\n                        </span>\r\n                        <div className=\"grid\">\r\n                            <div className=\"label-group\">\r\n                                <span>\r\n                                    <div className=\"label\">\r\n                                        <img src=\"./img/icon/virus.png\" className=\"icon\" />\r\n                                        <h4>ติดเชื้อสะสม</h4>\r\n                                    </div>\r\n                                    <h2>{commaSeparateNumber(json.cases)}</h2>\r\n                                </span>\r\n                                <span>\r\n                                    <div className=\"label\">\r\n                                        <img src=\"./img/icon/skull.png\" className=\"icon\" />\r\n                                        <h4>เสียชีวิตสะสม</h4>\r\n                                    </div>\r\n                                    <h2>{commaSeparateNumber(json.deaths)}</h2>\r\n                                </span>\r\n                                <span>\r\n                                    <div className=\"label\">\r\n                                        <img src=\"./img/icon/patient.png\" className=\"icon\" />\r\n                                        <h4>รักษาทั้งหมด</h4>\r\n                                    </div>\r\n                                    <h2>{commaSeparateNumber(json.recovered)}</h2>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"chart-pie\">\r\n                                <Pie data={pieChart}\r\n                                    options={{\r\n                                        rotation: 30,\r\n                                        responsive: true,\r\n                                        plugins: {\r\n                                            legend: {\r\n                                                position: 'top',\r\n                                            }\r\n                                        }\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"display-chart\">\r\n                <div className=\"ChartWorldWideCovid\">\r\n                    <Line data={lineChart}\r\n                        options={{\r\n                            responsive: true,\r\n                            plugins: {\r\n                                title: {\r\n                                    display: true,\r\n                                    text: 'Worldwide covid chart'\r\n                                },\r\n                            },\r\n                            interaction: {\r\n                                intersect: false,\r\n                            },\r\n                            scales: {\r\n                                x: {\r\n                                    display: true,\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: 'วันที่'\r\n                                    }\r\n                                },\r\n                                y: {\r\n                                    display: true,\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: 'ยอดคน'\r\n                                    }\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <select className=\"retrospect-world-wide\" onChange={(e) => {\r\n                        const selectDay = e.target.value\r\n                        LineChart(selectDay)\r\n                    }}>\r\n                        <option value=\"7\">7 วันที่ผ่านมา</option>\r\n                        <option value=\"14\">14 วันที่ผ่านมา</option>\r\n                        <option value=\"30\">1 เดือนผ่านมา</option>\r\n                        <option value=\"90\">3 เดือนผ่านมา</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorldWideCovidBoard","import './CountryCovid.css'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { Line, Pie } from 'react-chartjs-2';\r\n\r\nfunction formatDate(date) {\r\n    const arrMonth = ['มกราคม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน', 'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม']\r\n    var d = new Date(date),\r\n        month = '' + (arrMonth[d.getMonth()]),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear() + 543;\r\n\r\n    if (month.length < 2)\r\n        month = '0' + month;\r\n    if (day.length < 2)\r\n        day = '0' + day;\r\n\r\n    return \"วันที่ \" + day + ' ' + month + ' พ.ศ.' + year;\r\n}\r\n\r\nfunction commaSeparateNumber(val) {\r\n    while (/(\\d+)(\\d{3})/.test(val.toString())) {\r\n        val = val.toString().replace(/(\\d+)(\\d{3})/, '$1' + ',' + '$2');\r\n    }\r\n    return val;\r\n}\r\n\r\nfunction CountryCovid() {\r\n    let arrJson = []\r\n    let objCountry = []\r\n    const [json, setJson] = useState(null)\r\n    const [country, setCountry] = useState([])\r\n    const [selectCountry, setSelectCountry] = useState({ title: \"Thailand\", code: \"TH\", id: 201 })\r\n    const [chart, setChart] = useState({})\r\n    const [pieChart, setPieChart] = useState({})\r\n    const [day, setDay] = useState(\"7\")\r\n\r\n    const Chart = (selectDay) => {\r\n        if (!selectCountry) {\r\n            setChart({})\r\n            return\r\n        }\r\n        let arrCases = []\r\n        let arrCalCases = []\r\n        let arrDeaths = []\r\n        let arrCalDeaths = []\r\n        let arrLabel = []\r\n\r\n        axios.get(\"https://disease.sh/v3/covid-19/historical/\" + selectCountry.code + \"?lastdays=\" + selectDay)\r\n            .then(res => {\r\n                arrLabel = Object.keys(res.data.timeline.cases);\r\n                arrCases = Object.values(res.data.timeline.cases);\r\n                arrDeaths = Object.values(res.data.timeline.deaths);\r\n                //cal cases\r\n                arrCalCases = arrCases.map((item, i) => {\r\n                    if (i === (arrCases.length - 1)) {\r\n                        return item - arrCases[i - 1]\r\n                    }\r\n                    return arrCases[i + 1] - item\r\n                })\r\n\r\n                //cal deaths\r\n                arrCalDeaths = arrDeaths.map((item, i) => {\r\n                    if (i === (arrDeaths.length - 1)) {\r\n                        return item - arrDeaths[i - 1]\r\n                    }\r\n                    return arrDeaths[i + 1] - item\r\n                })\r\n\r\n                setChart({\r\n                    labels: arrLabel,\r\n                    datasets: [\r\n                        {\r\n                            label: 'ติดเชื้อ',\r\n                            data: arrCalCases,\r\n                            borderColor: '#FF0000',\r\n                            backgroundColor: '#FF0000',\r\n                            fill: false,\r\n                            cubicInterpolationMode: 'monotone',\r\n                            tension: 0.4\r\n                        },\r\n                        {\r\n                            label: 'เสียชีวิต',\r\n                            data: arrCalDeaths,\r\n                            borderColor: '#000000',\r\n                            backgroundColor: '#000000',\r\n                            fill: false,\r\n                            cubicInterpolationMode: 'monotone',\r\n                            tension: 0.4\r\n                        }\r\n                    ]\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const PieChart = (population, cases) => {\r\n        const calCases = ((cases / population) * 100).toFixed(2)\r\n        const calPopulation = 100 - calCases\r\n        setPieChart({\r\n            labels: ['ประชากรทั่วโลก ' + calPopulation + '%', 'คนติดเชื้อสะสม ' + calCases + '%'],\r\n            datasets: [\r\n                {\r\n                    label: 'ผู้ติดเชื้อ',\r\n                    data: [population, cases],\r\n                    backgroundColor: ['#1e60c9', '#9e1111']\r\n                }\r\n            ]\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://disease.sh/v3/covid-19/countries\").then((response) => {\r\n            setJson(response.data)\r\n            arrJson = response.data\r\n            objCountry = arrJson.map((item, i) => {\r\n                return {\r\n                    title: item.country,\r\n                    code: item.countryInfo.iso2,\r\n                    id: i\r\n                }\r\n            })\r\n            setCountry(objCountry)\r\n            PieChart(!selectCountry ? 0 : arrJson[selectCountry.id].population, !selectCountry ? 0 : arrJson[selectCountry.id].cases)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Chart(day)\r\n        try {\r\n            PieChart(!selectCountry.id ? 0 : json[selectCountry.id].population, !selectCountry ? 0 : json[selectCountry.id].cases)\r\n          }\r\n          catch(err) {\r\n            PieChart(0, 0)\r\n          }\r\n    }, [selectCountry, day])\r\n    \r\n\r\n    if (!country || !json) {\r\n        return null\r\n    }\r\n\r\n    const date = new Date()\r\n\r\n    return (\r\n        <div className=\"CountryCovid\">\r\n            <div className=\"ChooseCountry\">\r\n                <div className=\"label-choose-country\">\r\n                    เลือกประเทศ\r\n                </div>\r\n                <div className=\"autocomplete\">\r\n                    <Autocomplete className=\"cp-complete\" autoSelect options={country}\r\n                        onChange={(e, v) => {\r\n                            setSelectCountry(v)\r\n                        }}\r\n                        defaultValue={{ title: \"Thailand\", code: \"TH\", id: 201 }}\r\n                        getOptionLabel={(option) => option.title}\r\n                        renderInput={(params) => (\r\n                            <TextField {...params}\r\n                                variant=\"outlined\"\r\n                                label=\"\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div className={!selectCountry ? \"flag-img hide\" : \"flag-img\"}>\r\n                    <img src={!selectCountry ? \"\" : \"https://www.countryflags.io/\" + selectCountry.code + \"/flat/64.png\"} />\r\n                </div>\r\n            </div>\r\n            <div className=\"CountryCovidBoard\">\r\n                <div className=\"label\">\r\n                    <h2>Country Covid-19</h2>\r\n                    <h2>{formatDate(date.getTime())}</h2>\r\n                </div>\r\n                <div className=\"main-group\">\r\n                    <div className=\"group n1\">\r\n                        <span>\r\n                            <img src=\"./img/icon/virus.png\" className=\"icon\" />\r\n                            <div className=\"text\">\r\n                                <h4>ติดเชื้อเพิ่มขึ้นวันนี้</h4>\r\n                                <h2>{commaSeparateNumber(!selectCountry ? 0 : json[selectCountry.id].todayCases)}</h2>\r\n                            </div>\r\n                        </span>\r\n                        <div className=\"span-inline\">\r\n                            <span>\r\n                                <img src=\"./img/icon/skull.png\" className=\"icon\" />\r\n                                <div className=\"text\">\r\n                                    <h4>เสียชีวิตวันนี้</h4>\r\n                                    <h2>{commaSeparateNumber(!selectCountry ? 0 : json[selectCountry.id].todayDeaths)}</h2>\r\n                                </div>\r\n                            </span>\r\n                            <span>\r\n                                <img src=\"./img/icon/patient.png\" className=\"icon\" />\r\n                                <div className=\"text\">\r\n                                    <h4>เข้ารักษาใหม่</h4>\r\n                                    <h2>{commaSeparateNumber(!selectCountry ? 0 : json[selectCountry.id].todayRecovered)}</h2>\r\n                                </div>\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"group n2\">\r\n                        <span className=\"popution\">\r\n                            <div className=\"label\">\r\n                                <img src=\"./img/icon/people.png\" className=\"icon\" />\r\n                                <h4>ประชากรทั้งประเทศ</h4>\r\n                            </div>\r\n                            <h2>{commaSeparateNumber(!selectCountry ? 0 : json[selectCountry.id].population)}</h2>\r\n                        </span>\r\n                        <div className=\"grid\">\r\n                            <div className=\"label-group\">\r\n                                <span>\r\n                                    <div className=\"label\">\r\n                                        <img src=\"./img/icon/virus.png\" className=\"icon\" />\r\n                                        <h4>ติดเชื้อสะสม</h4>\r\n                                    </div>\r\n                                    <h2>{commaSeparateNumber(!selectCountry ? 0 : json[selectCountry.id].cases)}</h2>\r\n                                </span>\r\n                                <span>\r\n                                    <div className=\"label\">\r\n                                        <img src=\"./img/icon/skull.png\" className=\"icon\" />\r\n                                        <h4>เสียชีวิตสะสม</h4>\r\n                                    </div>\r\n                                    <h2>{commaSeparateNumber(!selectCountry ? 0 : json[selectCountry.id].deaths)}</h2>\r\n                                </span>\r\n                                <span>\r\n                                    <div className=\"label\">\r\n                                        <img src=\"./img/icon/patient.png\" className=\"icon\" />\r\n                                        <h4>รักษาทั้งหมด</h4>\r\n                                    </div>\r\n                                    <h2>{commaSeparateNumber(!selectCountry ? 0 : json[selectCountry.id].recovered)}</h2>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"chart-pie\">\r\n                                <Pie data={pieChart}\r\n                                    options={{\r\n                                        rotation: 30,\r\n                                        responsive: true,\r\n                                        plugins: {\r\n                                            legend: {\r\n                                                position: 'top',\r\n                                            }\r\n                                        }\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"ChartCountry\">\r\n                <Line data={!selectCountry ? null : chart}\r\n                    options={{\r\n                        responsive: true,\r\n                        plugins: {\r\n                            title: {\r\n                                display: true,\r\n                                text: 'Worldwide covid chart'\r\n                            },\r\n                        },\r\n                        interaction: {\r\n                            intersect: false,\r\n                        },\r\n                        scales: {\r\n                            x: {\r\n                                display: true,\r\n                                title: {\r\n                                    display: true,\r\n                                    text: 'วันที่'\r\n                                }\r\n                            },\r\n                            y: {\r\n                                display: true,\r\n                                title: {\r\n                                    display: true,\r\n                                    text: 'ยอดคน'\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n                <select className=\"retrospect-country\" onChange={(e) => {\r\n                    const selectDay = e.target.value\r\n                    setDay(selectDay)\r\n                    // Chart(selectDay)\r\n                }}>\r\n                    <option value=\"7\">7 วันที่ผ่านมา</option>\r\n                    <option value=\"14\">14 วันที่ผ่านมา</option>\r\n                    <option value=\"30\">1 เดือนผ่านมา</option>\r\n                    <option value=\"90\">3 เดือนผ่านมา</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryCovid","import './Tab.css'\r\nimport WorldWideCovidBoard from \"./WorldWideCovid\";\r\nimport CountryCovid from './CountryCovid';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction Tab(){\r\n    const [toggleTab, setToggleTab] = useState(1);\r\n\r\n    const toggleTabs = (n) => {\r\n        setToggleTab(n)\r\n    }\r\n\r\n    return(\r\n        <div className=\"Tab\">\r\n            <div className=\"block-tabs\">\r\n                <div className={toggleTab === 1 ? \"tabs active\" : \"tabs\"} onClick={() => {toggleTabs(1)}}>ผู้คนทั่วโลก</div>\r\n                <div className={toggleTab === 2 ? \"tabs active\" : \"tabs\"} onClick={() => {toggleTabs(2)}}>ผู้คนในประเทศ</div>\r\n            </div>\r\n            <div className=\"content-tabs\">\r\n                <div className={toggleTab === 1 ? \"content active\" : \"content\"}>\r\n                    <WorldWideCovidBoard />\r\n                </div>\r\n                <div className={toggleTab === 2 ? \"content active\" : \"content\"}>\r\n                    <CountryCovid />\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tab;","import \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport Tab from \"./Tab\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Navbar />\n            <Tab />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}