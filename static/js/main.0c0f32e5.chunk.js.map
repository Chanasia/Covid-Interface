{"version":3,"sources":["Navbar.js","ChartWorldWideCovid.js","WorldWideCovidBoard.js","Tab.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","class","ChartWorldWideCovid","useState","chart","setChart","Chart","selectYear","arrCases","arrCalCases","arrDeaths","arrCalDeaths","arrLabel","axios","get","then","res","Object","keys","data","cases","values","deaths","map","item","i","length","labels","datasets","label","borderColor","backgroundColor","fill","cubicInterpolationMode","tension","catch","err","console","log","useEffect","options","responsive","plugins","title","display","text","interaction","intersect","scales","x","y","onChange","e","choose","target","value","commaSeparateNumber","val","test","toString","replace","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","WorldWideCovidBoard","json","setJson","response","updated","src","todayCases","todayDeaths","todayRecovered","recovered","Tab","toggleTab","setToggleTab","toggleTabs","n","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c0f32e5.chunk.js","sourcesContent":["import './Navbar.css'\r\n\r\nfunction Navbar(){\r\n    return(\r\n        <div className=\"Navbar\">\r\n            <div className=\"nav\">\r\n                <h2>Covid-19 Interface</h2>\r\n                <h2>About</h2>\r\n                <i class=\"fab fa-github\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import './ChartWorldWideCovid.css'\r\nimport { Line, Chart } from 'react-chartjs-2';\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nfunction chooseYear(choose) {\r\n    if(choose == 1)\r\n        return 7\r\n    else if(choose == 2)\r\n        return 14\r\n    else if(choose == 3)\r\n        return 30\r\n    else if(choose == 4)\r\n        return 90\r\n    else\r\n        return 0\r\n    // switch (choose) {\r\n    //     case 1:\r\n    //         return \"7\"\r\n    //     case 2:\r\n    //         return \"14\"\r\n    //     case 3:\r\n    //         return \"30\"\r\n    //     case 4:\r\n    //         return \"90\"\r\n    //     default:\r\n    //         return \"7\"\r\n    // }\r\n}\r\n\r\nfunction ChartWorldWideCovid() {\r\n    const [chart, setChart] = useState({})\r\n    // const [choose, setChoose] = useState(7)\r\n\r\n\r\n    const Chart = (selectYear) => {\r\n        let arrCases = []\r\n        let arrCalCases = []\r\n        let arrDeaths = []\r\n        let arrCalDeaths = []\r\n        let arrLabel = []\r\n\r\n        axios.get(\"https://disease.sh/v3/covid-19/historical/all?lastdays=\" + selectYear)\r\n            .then(res => {\r\n                arrLabel = Object.keys(res.data.cases);\r\n                arrCases = Object.values(res.data.cases);\r\n                arrDeaths = Object.values(res.data.deaths);\r\n                //cal cases\r\n                arrCalCases = arrCases.map((item, i) => {\r\n                    if (i == (arrCases.length - 1)) {\r\n                        return item - arrCases[i - 1]\r\n                    }\r\n                    return arrCases[i + 1] - item\r\n                })\r\n\r\n                //cal deaths\r\n                arrCalDeaths = arrDeaths.map((item, i) => {\r\n                    if (i == (arrDeaths.length - 1)) {\r\n                        return item - arrDeaths[i - 1]\r\n                    }\r\n                    return arrDeaths[i + 1] - item\r\n                })\r\n\r\n                setChart({\r\n                    labels: arrLabel,\r\n                    datasets: [\r\n                        {\r\n                            label: 'ติดเชื้อ',\r\n                            data: arrCalCases,\r\n                            borderColor: '#FF0000',\r\n                            backgroundColor: '#FF0000',\r\n                            fill: false,\r\n                            cubicInterpolationMode: 'monotone',\r\n                            tension: 0.4\r\n                        },\r\n                        {\r\n                            label: 'เสียชีวิต',\r\n                            data: arrCalDeaths,\r\n                            borderColor: '#000000',\r\n                            backgroundColor: '#000000',\r\n                            fill: false,\r\n                            cubicInterpolationMode: 'monotone',\r\n                            tension: 0.4\r\n                        }\r\n                    ]\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        Chart(7);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"ChartWorldWideCovid\">\r\n            <Line data={chart}\r\n                options={{\r\n                    responsive: true,\r\n                    plugins: {\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Worldwide covid chart'\r\n                        },\r\n                    },\r\n                    interaction: {\r\n                        intersect: false,\r\n                    },\r\n                    scales: {\r\n                        x: {\r\n                            display: true,\r\n                            title: {\r\n                                display: true,\r\n                                text: 'วันที่'\r\n                            }\r\n                        },\r\n                        y: {\r\n                            display: true,\r\n                            title: {\r\n                                display: true,\r\n                                text: 'ยอดคน'\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n            <select className=\"retrospect-world-wide\" onChange={(e) => {\r\n                const selectYear = e.target.value\r\n                Chart(chooseYear(selectYear))\r\n            }}>\r\n                <option value=\"1\">7 วันที่ผ่านมา</option>\r\n                <option value=\"2\">14 วันที่ผ่านมา</option>\r\n                <option value=\"3\">1 เดือนผ่านมา</option>\r\n                <option value=\"4\">3 เดือนผ่านมา</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartWorldWideCovid;","import './WorldWideCovidBoard.css'\r\nimport axios from 'axios'\r\nimport {useState, useEffect} from 'react'\r\n\r\nconst baseUrl = \"https://disease.sh/v3/covid-19/all\"\r\n\r\nfunction commaSeparateNumber(val){\r\n    while (/(\\d+)(\\d{3})/.test(val.toString())){\r\n      val = val.toString().replace(/(\\d+)(\\d{3})/, '$1'+','+'$2');\r\n    }\r\n    return val;\r\n}\r\n\r\nfunction formatDate(date) {\r\n    const arrMonth = ['มกราคม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน', 'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม']\r\n    var d = new Date(date),\r\n        month = '' + (arrMonth[d.getMonth()]),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear() + 543;\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n\r\n    return \"วันที่ \" + day + ' ' + month + ' พ.ศ.' + year;\r\n}\r\n\r\nfunction WorldWideCovidBoard(){\r\n    const [json, setJson] = useState(null)\r\n    useEffect(() => {\r\n        axios.get(baseUrl).then((response) =>{\r\n            setJson(response.data)\r\n        })\r\n    }, [])\r\n\r\n    if(!json){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"WorldWideCovidBoard\">\r\n            <div className=\"label\">\r\n                <h2>Worldwide covid-19</h2>\r\n                <h2>{formatDate(json.updated)}</h2>\r\n            </div>\r\n            <div className=\"main-group\">\r\n                <div className=\"group n1\">\r\n                    <span>\r\n                        <img src=\"./img/icon/virus.png\" className=\"icon\" />\r\n                    <div className=\"text\">\r\n                        <h4>ติดเชื้อเพิ่มขึ้นวันนี้</h4>\r\n                        <h2>{commaSeparateNumber(json.todayCases)}</h2>\r\n                    </div>\r\n                    </span>\r\n                    <div className=\"span-inline\">\r\n                        <span>\r\n                            <img src=\"./img/icon/skull.png\" className=\"icon\" />\r\n                            <div className=\"text\">\r\n                                <h4>เสียชีวิตวันนี้</h4>\r\n                                <h2>{commaSeparateNumber(json.todayDeaths)}</h2>\r\n                            </div>\r\n                        </span>\r\n                        <span>\r\n                            <img src=\"./img/icon/patient.png\" className=\"icon\" />\r\n                            <div className=\"text\">\r\n                                <h4>เข้ารักษาใหม่</h4>\r\n                                <h2>{commaSeparateNumber(json.todayRecovered)}</h2>\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"group n2\">\r\n                    <span>\r\n                        <div className=\"label\">\r\n                            <img src=\"./img/icon/virus.png\" className=\"icon\" />\r\n                            <h4>ติดเชื้อทั้งหมด</h4>\r\n                        </div>\r\n                        <h2>{commaSeparateNumber(json.cases)}</h2>\r\n                    </span>\r\n                    <span>\r\n                        <div className=\"label\">\r\n                            <img src=\"./img/icon/skull.png\" className=\"icon\" />\r\n                            <h4>เสียชีวิตทั้งหมด</h4>\r\n                        </div>\r\n                        <h2>{commaSeparateNumber(json.deaths)}</h2>\r\n                    </span>\r\n                    <span>\r\n                        <div className=\"label\">\r\n                            <img src=\"./img/icon/patient.png\" className=\"icon\" />\r\n                            <h4>รักษาทั้งหมด</h4>\r\n                        </div>\r\n                        <h2>{commaSeparateNumber(json.recovered)}</h2>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorldWideCovidBoard","import './Tab.css'\r\nimport ChartWorldWideCovid from \"./ChartWorldWideCovid\";\r\nimport WorldWideCovidBoard from \"./WorldWideCovidBoard\";\r\nimport { useState } from 'react';\r\n\r\nfunction Tab(){\r\n    const [toggleTab, setToggleTab] = useState(1);\r\n\r\n    const toggleTabs = (n) => {\r\n        setToggleTab(n)\r\n    }\r\n\r\n    return(\r\n        <div className=\"Tab\">\r\n            <div className=\"block-tabs\">\r\n                <div className={toggleTab === 1 ? \"tabs active\" : \"tabs\"} onClick={() => {toggleTabs(1)}}>ผู้คนทั่วโลก</div>\r\n                <div className={toggleTab === 2 ? \"tabs active\" : \"tabs\"} onClick={() => {toggleTabs(2)}}>ผู้คนในประเทศ</div>\r\n            </div>\r\n            <div className=\"content-tabs\">\r\n                <div className={toggleTab === 1 ? \"content active\" : \"content\"}>\r\n                    <WorldWideCovidBoard />\r\n                    <ChartWorldWideCovid />\r\n                </div>\r\n                <div className={toggleTab === 2 ? \"content active\" : \"content\"}>\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem nihil magni cupiditate! Libero repellat nisi animi totam culpa! Ipsum omnis, incidunt rem voluptate animi nostrum expedita natus accusamus eos cupiditate tenetur vero ipsa similique commodi quae inventore, asperiores quo dolorum! Magni fugiat doloribus impedit deserunt maiores, perferendis culpa sequi necessitatibus aliquam, laboriosam officiis. Enim illo commodi, deserunt quam animi fugit, accusamus hic ea omnis iusto ratione pariatur, natus reprehenderit odio non doloribus nulla tempore repellat nisi nihil vero. Culpa nam quia laborum incidunt, nostrum, omnis suscipit, voluptatum expedita id temporibus quas magni! Harum quidem pariatur ipsa officiis consequatur dicta quis?\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tab;","import \"./App.css\";\nimport Navbar from \"./Navbar\";\nimport Tab from \"./Tab\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Navbar />\n            <Tab />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}